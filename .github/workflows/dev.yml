# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Publish Docker image

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  push_to_registries:
    name: Push Docker image to multiple registries
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: |
            mona666/linebot-subsidy-fastapi
            ghcr.io/fionn88/linebot-subsidy-fastapi
      
      - name: Build and push Docker images
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  deploy:
    name: Deploy app
    runs-on: ubuntu-latest
    needs: push_to_registries
    steps:
      - name: checkout repo
        uses: actions/checkout@v3
      - name: Config file access
        run: |
          sed -i -e 's/$APP_HOST/'${{ secrets.APP_HOST }}'/g' fly.toml
          sed -i -e 's/$DB_PORT/'${{ secrets.DB_PORT }}'/g' fly.toml
          sed -i -e 's/$DB_USER/'${{ secrets.DB_USER }}'/g' fly.toml
          sed -i -e 's/$DB_PASSWORD/'${{ secrets.DB_PASSWORD }}'/g' fly.toml
          sed -i -e 's/$DB_HOST/'${{ secrets.DB_HOST }}'/g' fly.toml
          sed -i -e 's/$DB_SCHEMA/'${{ secrets.DB_SCHEMA }}'/g' fly.toml
          sed -i -e 's/$DB_TABLE/'${{ secrets.DB_TABLE }}'/g' fly.toml
          sed -i -e 's/$LINE_CHANNEL_ACCESS_TOKEN/'${{ secrets.LINE_CHANNEL_ACCESS_TOKEN }}'/g' fly.toml
          sed -i -e 's/$LINE_CHANNEL_SECRET/'${{ secrets.LINE_CHANNEL_SECRET }}'/g' fly.toml
          sed -i -e 's/$PORT/'${{ secrets.PORT }}'/g' fly.toml
          sed -i -e 's/$AUTO_STOP_MACHINES/'${{ secrets.AUTO_STOP_MACHINES }}'/g' fly.toml
          cat fly.toml
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only -a ${{ secrets.APP_HOST }}
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
